{
	"name": "dataflow4",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "store_staging",
						"type": "DatasetReference"
					},
					"name": "source1"
				},
				{
					"dataset": {
						"referenceName": "staff_staging",
						"type": "DatasetReference"
					},
					"name": "source2"
				},
				{
					"dataset": {
						"referenceName": "address_staging",
						"type": "DatasetReference"
					},
					"name": "source3"
				},
				{
					"dataset": {
						"referenceName": "city_staging",
						"type": "DatasetReference"
					},
					"name": "source4"
				},
				{
					"dataset": {
						"referenceName": "country_staging",
						"type": "DatasetReference"
					},
					"name": "source5"
				},
				{
					"dataset": {
						"referenceName": "Dim_Store",
						"type": "DatasetReference"
					},
					"name": "DimStore"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "Dim_Store",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "join1"
				},
				{
					"name": "join2"
				},
				{
					"name": "join3"
				},
				{
					"name": "join4"
				},
				{
					"name": "derivedColumn1"
				},
				{
					"name": "exists1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          store_id as string,",
				"          manager_staff_id as string,",
				"          address_id as string,",
				"          last_update as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> source1",
				"source(output(",
				"          staff_id as string,",
				"          first_name as string,",
				"          last_name as string,",
				"          address_id as string,",
				"          picture as string,",
				"          email as string,",
				"          store_id as string,",
				"          active as string,",
				"          username as string,",
				"          password as string,",
				"          last_update as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> source2",
				"source(output(",
				"          address_id as string,",
				"          address as string,",
				"          address2 as string,",
				"          district as string,",
				"          city_id as string,",
				"          postal_code as string,",
				"          phone as string,",
				"          last_update as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> source3",
				"source(output(",
				"          city_id as string,",
				"          city as string,",
				"          country_id as string,",
				"          last_update as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> source4",
				"source(output(",
				"          country_id as string,",
				"          country as string,",
				"          last_update as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> source5",
				"source(output(",
				"          SK_store as integer,",
				"          BK_store as integer,",
				"          manager_full_name as string,",
				"          country as string,",
				"          city as string,",
				"          address as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> DimStore",
				"source1, source2 join(manager_staff_id == staff_id,",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> join1",
				"derivedColumn1, source3 join(source1@address_id == source3@address_id,",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> join2",
				"join2, source4 join(source3@city_id == source4@city_id,",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> join3",
				"join3, source5 join(source4@country_id == source5@country_id,",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> join4",
				"join1 derive(full_name = concat(first_name, ' ', last_name)) ~> derivedColumn1",
				"join4, DimStore exists(toInteger(source1@store_id) == BK_store,",
				"     negate:true,",
				"     broadcast: 'auto')~> exists1",
				"exists1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          SK_store as integer,",
				"          BK_store as integer,",
				"          manager_full_name as string,",
				"          country as string,",
				"          city as string,",
				"          address as string",
				"     ),",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError',",
				"     mapColumn(",
				"          BK_store = store_id,",
				"          manager_full_name = full_name,",
				"          country,",
				"          city,",
				"          address",
				"     )) ~> sink1"
			]
		}
	}
}